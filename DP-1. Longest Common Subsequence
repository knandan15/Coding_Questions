//Longest Common Subsequence
//https://www.geeksforgeeks.org/top-20-dynamic-programming-interview-questions/

/*Solution using DP*/

// { Driver Code Starts
#include<bits/stdc++.h>
const int mod=1e9+7;
using namespace std;

int lcs(int, int, string, string);

int main()
{
    int t,n,k,x,y;
    
    cin>>t;
    while(t--)
    {
        cin>>x>>y;          // Take size of both the strings as input
        string s1,s2;
        cin>>s1>>s2;        // Take both the string as input
        
        cout << lcs(x, y, s1, s2) << endl;
    }
    return 0;
}
// } Driver Code Ends


// function to find longest common subsequence

int lcs(int x, int y, string s1, string s2){
    
    // your code here
    int L[x+1][y+1];
    for(int i=0;i<=x;i++)
    {
        for(int j=0;j<=y;j++)
        {
            if(i==0 || j==0)
                L[i][j]=0;
            else if(s1[i-1]==s2[j-1])
                L[i][j]=1+L[i-1][j-1];
            else
                L[i][j]=max(L[i][j-1],L[i-1][j]);
            
        }
        
    }
    return L[x][y];
    
}
_______________________________________________________________________________________________________________________________________
