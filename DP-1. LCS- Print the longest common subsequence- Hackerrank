vector<int> longestCommonSubsequence(vector<int> a, vector<int> b) {
    int m,n;
    m=a.size(); n=b.size();
    int l[m+1][n+1];

    for(int i=0;i<=m;i++)
    {
        for(int j=0;j<=n;j++)
        {
            if(i==0||j==0)
                l[i][j]=0;
            else if(a[i-1]==b[j-1])
                l[i][j]=1+l[i-1][j-1];
            else
                l[i][j]=max(l[i][j-1],l[i-1][j]);
        }
    }
    int cnt=l[m][n];
    vector<int>result(cnt);
    int i=m,j=n;

    while(i>0 && j>0)
    {
        if(a[i-1]==b[j-1])
        {    result[cnt-1]=a[i-1];
            i--;j--;cnt--;
        }

        else if(l[i-1][j]>l[i][j-1])
            i--;
        else
            j--;
    }
    return result;


}
